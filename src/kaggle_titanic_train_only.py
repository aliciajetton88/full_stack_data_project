# -*- coding: utf-8 -*-
"""kaggle_titanic_train_only.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vld8XLW4GW26PxcUuIGFVJnJ5zMZqFDK

# Set up and load data
"""

!pip install -q kaggle scikit-learn pandas numpy matplotlib seaborn
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, roc_curve
from sklearn.preprocessing import StandardScaler

!git clone https://github.com/aliciajetton88/full_stack_data_project.git

data = pd.read_csv("full_stack_data_project/data/titanic/train.csv")

X = data[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]
y = data['Survived']

"""# Clean and preprocess data"""

#fill nulls
data['Age'] = data['Age'].fillna(data['Age'].median())
data['Embarked'] = data['Embarked'].fillna(data['Embarked'].mode()[0])
#REDEFINE X
X = data[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]

#handle categorical variables
cat_X = pd.get_dummies(X, drop_first = True)

"""# Prepare Data for Modeling"""

X_train, X_test, y_train, y_test = train_test_split(cat_X, y, test_size = 0.2, random_state = 3, stratify=y)

scale = StandardScaler()
X_train_scaled = scale.fit_transform(X_train)
X_test_scaled = scale.transform(X_test)

"""# Model Training & Predictions"""

model = LogisticRegression()

model.fit(X_train_scaled, y_train)

import joblib
joblib.dump(model, 'titanic_logistic_model_train.pkl')

from google.colab import files
files.download("titanic_logistic_model_train.pkl")